---
http_interactions:
- request:
    method: post
    uri: https://FAKE_TIMDEX_HOST/graphql
    body:
      encoding: UTF-8
      string: '{"query":"query TimdexSearch__Query($q: String, $citation: String,
        $contributors: String, $fundingInformation: String, $identifiers: String,
        $locations: String, $subjects: String, $title: String, $sourceFilter: [String!],
        $index: String, $from: String, $contentTypeFilter: [String!]) {\n  search(searchterm:
        $q, citation: $citation, contributors: $contributors, fundingInformation:
        $fundingInformation, identifiers: $identifiers, locations: $locations, subjects:
        $subjects, title: $title, sourceFilter: $sourceFilter, index: $index, from:
        $from, contentTypeFilter: $contentTypeFilter) {\n    hits\n    records {\n      timdexRecordId\n      title\n      contentType\n      contributors
        {\n        kind\n        value\n      }\n      publicationInformation\n      dates
        {\n        kind\n        value\n      }\n      notes {\n        kind\n        value\n      }\n      highlight
        {\n        matchedField\n        matchedPhrases\n      }\n      sourceLink\n    }\n    aggregations
        {\n      contentType {\n        key\n        docCount\n      }\n      contributors
        {\n        key\n        docCount\n      }\n      format {\n        key\n        docCount\n      }\n      languages
        {\n        key\n        docCount\n      }\n      literaryForm {\n        key\n        docCount\n      }\n      source
        {\n        key\n        docCount\n      }\n      subjects {\n        key\n        docCount\n      }\n    }\n  }\n}","variables":{"from":"0","q":"poverty","index":"FAKE_TIMDEX_INDEX"},"operationName":"TimdexSearch__Query"}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - MIT Libraries Client
      Content-Type:
      - application/json
  response:
    status:
      code: 500
      message: Internal Server Error
    headers:
      Server:
      - Cowboy
      Date:
      - Fri, 01 Mar 2024 19:40:47 GMT
      Report-To:
      - '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1709322045&sid=67ff5de4-ad2b-4112-9289-cf96be89efed&s=jZXc35T3MIuZCIBlDa%2BdQCxER4qUvlJpTlrBB3PIQkU%3D"}]}'
      Reporting-Endpoints:
      - heroku-nel=https://nel.heroku.com/reports?ts=1709322045&sid=67ff5de4-ad2b-4112-9289-cf96be89efed&s=jZXc35T3MIuZCIBlDa%2BdQCxER4qUvlJpTlrBB3PIQkU%3D
      Nel:
      - '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}'
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Content-Type:
      - application/json; charset=utf-8
      Vary:
      - Accept, Origin
      Etag:
      - W/"128abad46e82c32d9c8b18a9bede5fd3"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 1b3cf30e-dc5c-420b-a4d3-414fff4c3000
      X-Runtime:
      - '2.531735'
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains
      Content-Length:
      - '43360'
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 01 Mar 2024 19:40:48 GMT
recorded_with: VCR 6.2.0
