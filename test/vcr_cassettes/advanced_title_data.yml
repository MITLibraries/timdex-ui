---
http_interactions:
- request:
    method: post
    uri: https://FAKE_TIMDEX_HOST/graphql
    body:
      encoding: UTF-8
      string: '{"query":"query TimdexSearch__BaseQuery($q: String, $citation: String,
        $contributors: String, $fundingInformation: String, $identifiers: String,
        $locations: String, $subjects: String, $title: String, $index: String, $from:
        String, $contentTypeFilter: [String!], $contributorsFilter: [String!], $formatFilter:
        [String!], $languagesFilter: [String!], $literaryFormFilter: String, $placesFilter:
        [String!], $sourceFilter: [String!], $subjectsFilter: [String!]) {\n  search(searchterm:
        $q, citation: $citation, contributors: $contributors, fundingInformation:
        $fundingInformation, identifiers: $identifiers, locations: $locations, subjects:
        $subjects, title: $title, index: $index, from: $from, contentTypeFilter: $contentTypeFilter,
        contributorsFilter: $contributorsFilter, formatFilter: $formatFilter, languagesFilter:
        $languagesFilter, literaryFormFilter: $literaryFormFilter, placesFilter: $placesFilter,
        sourceFilter: $sourceFilter, subjectsFilter: $subjectsFilter) {\n    hits\n    records
        {\n      timdexRecordId\n      title\n      contentType\n      contributors
        {\n        kind\n        value\n      }\n      publicationInformation\n      dates
        {\n        kind\n        value\n      }\n      notes {\n        kind\n        value\n      }\n      highlight
        {\n        matchedField\n        matchedPhrases\n      }\n      sourceLink\n    }\n    aggregations
        {\n      contentType {\n        key\n        docCount\n      }\n      contributors
        {\n        key\n        docCount\n      }\n      format {\n        key\n        docCount\n      }\n      languages
        {\n        key\n        docCount\n      }\n      literaryForm {\n        key\n        docCount\n      }\n      places
        {\n        key\n        docCount\n      }\n      source {\n        key\n        docCount\n      }\n      subjects
        {\n        key\n        docCount\n      }\n    }\n  }\n}","variables":{"from":"0","title":"data","index":"FAKE_TIMDEX_INDEX"},"operationName":"TimdexSearch__BaseQuery"}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - MIT Libraries Client
      Content-Type:
      - application/json
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Tue, 12 Mar 2024 19:01:50 GMT
      Report-To:
      - '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1710270109&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&s=VldgW2vKHzHE7WiVz2L12e1ZFIP%2FKYQPFmgK5Fl5uHE%3D"}]}'
      Reporting-Endpoints:
      - heroku-nel=https://nel.heroku.com/reports?ts=1710270109&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&s=VldgW2vKHzHE7WiVz2L12e1ZFIP%2FKYQPFmgK5Fl5uHE%3D
      Nel:
      - '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}'
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      X-Content-Type-Options:
      - nosniff
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Content-Type:
      - application/json; charset=utf-8
      Vary:
      - Accept, Origin
      Etag:
      - W/"b3027dece9959fd30728d18289247857"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 517f093a-812f-44a2-8d2a-c8306e72cf1f
      X-Runtime:
      - '0.327609'
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains
      Content-Length:
      - '25311'
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJkYXRhIjp7InNlYXJjaCI6eyJoaXRzIjoxMDAwMCwicmVjb3JkcyI6W3sidGltZGV4UmVjb3JkSWQiOiJhbG1hOjk5MDAwMjg2MDQwMDEwNjc2MSIsInRpdGxlIjoiRGF0YSBkYXRhIiwiY29udGVudFR5cGUiOlsiTGFuZ3VhZ2UgbWF0ZXJpYWwiXSwiY29udHJpYnV0b3JzIjpbeyJraW5kIjoiTm90IHNwZWNpZmllZCIsInZhbHVlIjoiRGVlcCBTZWEgRHJpbGxpbmcgUHJvamVjdC4gSW5mb3JtYXRpb24gSGFuZGxpbmcgR3JvdXAifV0sInB1YmxpY2F0aW9uSW5mb3JtYXRpb24iOlsiTGEgSm9sbGEsIENhbGlmLiA6IFtUaGUgUHJvamVjdD9dLCAxOTc2LSJdLCJkYXRlcyI6W3sia2luZCI6IlB1YmxpY2F0aW9uIGRhdGUiLCJ2YWx1ZSI6IjE5NzYifV0sIm5vdGVzIjpbeyJraW5kIjoiVGl0bGUgU3RhdGVtZW50IG9mIFJlc3BvbnNpYmlsaXR5IiwidmFsdWUiOlsiSW5mb3JtYXRpb24gSGFuZGxpbmcgR3JvdXAsIERlZXAgU2VhIERyaWxsaW5nIFByb2plY3QiXX0seyJraW5kIjoiR2VuZXJhbCBOb3RlIiwidmFsdWUiOlsiVGl0bGUgZnJvbSBjYXB0aW9uIl19LHsia2luZCI6IkdlbmVyYWwgTm90ZSIsInZhbHVlIjpbIkRlc2NyaXB0aW9uIGJhc2VkIG9uOiAjMTIgKE5vdi4gMTk3OCkiXX0seyJraW5kIjoiTnVtYmVyaW5nIFBlY3VsaWFyaXRpZXMgTm90ZSIsInZhbHVlIjpbIlNvbWUgbnVtYmVycyBhcmUgcmV2aXNlZCBlZGl0aW9uIl19XSwiaGlnaGxpZ2h0IjpbeyJtYXRjaGVkRmllbGQiOiJ0aXRsZSIsIm1hdGNoZWRQaHJhc2VzIjpbIlx1MDAzY3NwYW4gY2xhc3M9XCJoaWdobGlnaHRcIlx1MDAzZURhdGFcdTAwM2Mvc3Bhblx1MDAzZSBcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VkYXRhXHUwMDNjL3NwYW5cdTAwM2UiXX1dLCJzb3VyY2VMaW5rIjoiaHR0cHM6Ly9taXQucHJpbW8uZXhsaWJyaXNncm91cC5jb20vZGlzY292ZXJ5L2Z1bGxkaXNwbGF5P3ZpZD0wMU1JVF9JTlNUOk1JVFx1MDAyNmRvY2lkPWFsbWE5OTAwMDI4NjA0MDAxMDY3NjEifSx7InRpbWRleFJlY29yZElkIjoiYWxtYTo5OTM1MTQ3MTM3MzA2NzYxIiwidGl0bGUiOiJCaWcgZGF0YSwgb3BlbiBkYXRhIGFuZCBkYXRhIGRldmVsb3BtZW50IiwiY29udGVudFR5cGUiOlsiTGFuZ3VhZ2UgbWF0ZXJpYWwiXSwiY29udHJpYnV0b3JzIjpbeyJraW5kIjoiYXV0aG9yIiwidmFsdWUiOiJNb25pbm8sIEplYW4tTG91aXMifSx7ImtpbmQiOiJhdXRob3IiLCJ2YWx1ZSI6IlNlZGthb3VpLCBTb3JheWEifV0sInB1YmxpY2F0aW9uSW5mb3JtYXRpb24iOlsiSG9ib2tlbiwgTmV3IEplcnNleSA6IElTVEUgTHRkL0pvaG4gV2lsZXkgYW5kIFNvbnMgSW5jLCAyMDE2Il0sImRhdGVzIjpbeyJraW5kIjoiUHVibGljYXRpb24gZGF0ZSIsInZhbHVlIjoiMjAxNiJ9XSwibm90ZXMiOlt7ImtpbmQiOiJUaXRsZSBTdGF0ZW1lbnQgb2YgUmVzcG9uc2liaWxpdHkiLCJ2YWx1ZSI6WyJKZWFuLUxvdWlzIE1vbmlubywgU29yYXlhIFNlZGthb3VpIl19LHsia2luZCI6IkdlbmVyYWwgTm90ZSIsInZhbHVlIjpbIkRlc2NyaXB0aW9uIGJhc2VkIHVwb24gcHJpbnQgdmVyc2lvbiBvZiByZWNvcmQiXX0seyJraW5kIjoiQmlibGlvZ3JhcGh5IE5vdGUiLCJ2YWx1ZSI6WyJJbmNsdWRlcyBiaWJsaW9ncmFwaGljYWwgcmVmZXJlbmNlcyBhbmQgaW5kZXgiXX0seyJraW5kIjoiU291cmNlIG9mIERlc2NyaXB0aW9uIE5vdGUiLCJ2YWx1ZSI6WyJEZXNjcmlwdGlvbiBiYXNlZCBvbiBwcmludCB2ZXJzaW9uIHJlY29yZCJdfV0sImhpZ2hsaWdodCI6W3sibWF0Y2hlZEZpZWxkIjoidGl0bGUiLCJtYXRjaGVkUGhyYXNlcyI6WyJCaWcgXHUwMDNjc3BhbiBjbGFzcz1cImhpZ2hsaWdodFwiXHUwMDNlZGF0YVx1MDAzYy9zcGFuXHUwMDNlLCBvcGVuIFx1MDAzY3NwYW4gY2xhc3M9XCJoaWdobGlnaHRcIlx1MDAzZWRhdGFcdTAwM2Mvc3Bhblx1MDAzZSBhbmQgXHUwMDNjc3BhbiBjbGFzcz1cImhpZ2hsaWdodFwiXHUwMDNlZGF0YVx1MDAzYy9zcGFuXHUwMDNlIGRldmVsb3BtZW50Il19XSwic291cmNlTGluayI6Imh0dHBzOi8vbWl0LnByaW1vLmV4bGlicmlzZ3JvdXAuY29tL2Rpc2NvdmVyeS9mdWxsZGlzcGxheT92aWQ9MDFNSVRfSU5TVDpNSVRcdTAwMjZkb2NpZD1hbG1hOTkzNTE0NzEzNzMwNjc2MSJ9LHsidGltZGV4UmVjb3JkSWQiOiJhbG1hOjk5MzUyNDI3NTIwMDY3NjEiLCJ0aXRsZSI6IlN0cmF0YSBEYXRhIFN1cGVyc3RyZWFtIFNlcmllczogRGF0YSBXYXJlaG91c2VzLCBEYXRhIExha2VzLCBhbmQgRGF0YSBMYWtlaG91c2VzIiwiY29udGVudFR5cGUiOlsiUHJvamVjdGVkIG1lZGl1bSJdLCJjb250cmlidXRvcnMiOm51bGwsInB1YmxpY2F0aW9uSW5mb3JtYXRpb24iOlsiTydSZWlsbHkgTWVkaWEsIEluYyJdLCJkYXRlcyI6W3sia2luZCI6IlB1YmxpY2F0aW9uIGRhdGUiLCJ2YWx1ZSI6IjIwMjEifV0sIm5vdGVzIjpudWxsLCJoaWdobGlnaHQiOlt7Im1hdGNoZWRGaWVsZCI6InRpdGxlIiwibWF0Y2hlZFBocmFzZXMiOlsiU3RyYXRhIFx1MDAzY3NwYW4gY2xhc3M9XCJoaWdobGlnaHRcIlx1MDAzZURhdGFcdTAwM2Mvc3Bhblx1MDAzZSBTdXBlcnN0cmVhbSBTZXJpZXM6IFx1MDAzY3NwYW4gY2xhc3M9XCJoaWdobGlnaHRcIlx1MDAzZURhdGFcdTAwM2Mvc3Bhblx1MDAzZSBXYXJlaG91c2VzLCBcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VEYXRhXHUwMDNjL3NwYW5cdTAwM2UgTGFrZXMsIGFuZCBcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VEYXRhXHUwMDNjL3NwYW5cdTAwM2UgTGFrZWhvdXNlcyJdfV0sInNvdXJjZUxpbmsiOiJodHRwczovL21pdC5wcmltby5leGxpYnJpc2dyb3VwLmNvbS9kaXNjb3ZlcnkvZnVsbGRpc3BsYXk/dmlkPTAxTUlUX0lOU1Q6TUlUXHUwMDI2ZG9jaWQ9YWxtYTk5MzUyNDI3NTIwMDY3NjEifSx7InRpbWRleFJlY29yZElkIjoiYWxtYTo5OTAwMjI5NzA2NzAxMDY3NjEiLCJ0aXRsZSI6IlRoZSBkYXRhIHJldm9sdXRpb24gOiBiaWcgZGF0YSwgb3BlbiBkYXRhLCBkYXRhIGluZnJhc3RydWN0dXJlcyBcdTAwMjYgdGhlaXIgY29uc2VxdWVuY2VzIiwiY29udGVudFR5cGUiOlsiTGFuZ3VhZ2UgbWF0ZXJpYWwiXSwiY29udHJpYnV0b3JzIjpbeyJraW5kIjoiYXV0aG9yIiwidmFsdWUiOiJLaXRjaGluLCBSb2IifV0sInB1YmxpY2F0aW9uSW5mb3JtYXRpb24iOlsiTG9zIEFuZ2VsZXMsIENhbGlmb3JuaWEgOiBMb25kb24gOiBTQUdFIFB1YmxpY2F0aW9ucywgMjAxNCIsIsKpMjAxNCJdLCJkYXRlcyI6W3sia2luZCI6IlB1YmxpY2F0aW9uIGRhdGUiLCJ2YWx1ZSI6IjIwMTQifV0sIm5vdGVzIjpbeyJraW5kIjoiVGl0bGUgU3RhdGVtZW50IG9mIFJlc3BvbnNpYmlsaXR5IiwidmFsdWUiOlsiUm9iIEtpdGNoaW4iXX0seyJraW5kIjoiQmlibGlvZ3JhcGh5IE5vdGUiLCJ2YWx1ZSI6WyJJbmNsdWRlcyBiaWJsaW9ncmFwaGljYWwgcmVmZXJlbmNlcyAocGFnZXMgMTkzLTIxNCkgYW5kIGluZGV4Il19XSwiaGlnaGxpZ2h0IjpbeyJtYXRjaGVkRmllbGQiOiJ0aXRsZSIsIm1hdGNoZWRQaHJhc2VzIjpbIlRoZSBcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VkYXRhXHUwMDNjL3NwYW5cdTAwM2UgcmV2b2x1dGlvbiA6IGJpZyBcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VkYXRhXHUwMDNjL3NwYW5cdTAwM2UsIG9wZW4gXHUwMDNjc3BhbiBjbGFzcz1cImhpZ2hsaWdodFwiXHUwMDNlZGF0YVx1MDAzYy9zcGFuXHUwMDNlLCBcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VkYXRhXHUwMDNjL3NwYW5cdTAwM2UgaW5mcmFzdHJ1Y3R1cmVzIFx1MDAyNiB0aGVpciBjb25zZXF1ZW5jZXMiXX1dLCJzb3VyY2VMaW5rIjoiaHR0cHM6Ly9taXQucHJpbW8uZXhsaWJyaXNncm91cC5jb20vZGlzY292ZXJ5L2Z1bGxkaXNwbGF5P3ZpZD0wMU1JVF9JTlNUOk1JVFx1MDAyNmRvY2lkPWFsbWE5OTAwMjI5NzA2NzAxMDY3NjEifSx7InRpbWRleFJlY29yZElkIjoiYWxtYTo5OTAwMzQ5OTM0MzAxMDY3NjEiLCJ0aXRsZSI6IlRoZSBEYXRhIFJldm9sdXRpb24gOiBCaWcgRGF0YSwgT3BlbiBEYXRhLCBEYXRhIEluZnJhc3RydWN0dXJlcyBcdTAwMjYgVGhlaXIgQ29uc2VxdWVuY2VzIiwiY29udGVudFR5cGUiOlsiTGFuZ3VhZ2UgbWF0ZXJpYWwiXSwiY29udHJpYnV0b3JzIjpbeyJraW5kIjoiTm90IHNwZWNpZmllZCIsInZhbHVlIjoiS2l0Y2hpbiwgUm9iIn1dLCJwdWJsaWNhdGlvbkluZm9ybWF0aW9uIjpbIkxvbmRvbiA6IFNhZ2UgUHVibGljYXRpb25zLCAyMDE0Il0sImRhdGVzIjpbeyJraW5kIjoiUHVibGljYXRpb24gZGF0ZSIsInZhbHVlIjoiMjAxNCJ9XSwibm90ZXMiOlt7ImtpbmQiOiJUaXRsZSBTdGF0ZW1lbnQgb2YgUmVzcG9uc2liaWxpdHkiLCJ2YWx1ZSI6WyJSb2IgS2l0Y2hpbiJdfSx7ImtpbmQiOiJCaWJsaW9ncmFwaHkgTm90ZSIsInZhbHVlIjpbIkluY2x1ZGVzIGJpYmxpb2dyYXBoaWNhbCByZWZlcmVuY2VzIGFuZCBpbmRleCJdfSx7ImtpbmQiOiJTb3VyY2Ugb2YgRGVzY3JpcHRpb24gTm90ZSIsInZhbHVlIjpbIlByaW50IHZlcnNpb24gcmVjb3JkIl19XSwiaGlnaGxpZ2h0IjpbeyJtYXRjaGVkRmllbGQiOiJ0aXRsZSIsIm1hdGNoZWRQaHJhc2VzIjpbIlRoZSBcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VEYXRhXHUwMDNjL3NwYW5cdTAwM2UgUmV2b2x1dGlvbiA6IEJpZyBcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VEYXRhXHUwMDNjL3NwYW5cdTAwM2UsIE9wZW4gXHUwMDNjc3BhbiBjbGFzcz1cImhpZ2hsaWdodFwiXHUwMDNlRGF0YVx1MDAzYy9zcGFuXHUwMDNlLCBcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VEYXRhXHUwMDNjL3NwYW5cdTAwM2UgSW5mcmFzdHJ1Y3R1cmVzIFx1MDAyNiBUaGVpciBDb25zZXF1ZW5jZXMiXX1dLCJzb3VyY2VMaW5rIjoiaHR0cHM6Ly9taXQucHJpbW8uZXhsaWJyaXNncm91cC5jb20vZGlzY292ZXJ5L2Z1bGxkaXNwbGF5P3ZpZD0wMU1JVF9JTlNUOk1JVFx1MDAyNmRvY2lkPWFsbWE5OTAwMzQ5OTM0MzAxMDY3NjEifSx7InRpbWRleFJlY29yZElkIjoiYWxtYTo5OTM1MDY4MDA3NjA2NzYxIiwidGl0bGUiOiJEYXRhIGFyY2hpdGVjdHVyZSA6IGEgcHJpbWVyIGZvciB0aGUgZGF0YSBzY2llbnRpc3QgOiBiaWcgZGF0YSwgZGF0YSB3YXJlaG91c2UgYW5kIGRhdGEgdmF1bHQiLCJjb250ZW50VHlwZSI6WyJMYW5ndWFnZSBtYXRlcmlhbCJdLCJjb250cmlidXRvcnMiOlt7ImtpbmQiOiJhdXRob3IiLCJ2YWx1ZSI6IklubW9uLCBXLiBIIn0seyJraW5kIjoiYXV0aG9yIiwidmFsdWUiOiJMaW5zdGVkdCwgRGFuIn0seyJraW5kIjoiZWRpdG9yIiwidmFsdWUiOiJFbGxpb3QsIFN0ZXZlbiJ9LHsia2luZCI6ImRlc2lnbmVyIiwidmFsdWUiOiJSb2dlcnMsIE1hcmsifV0sInB1YmxpY2F0aW9uSW5mb3JtYXRpb24iOlsiQW1zdGVyZGFtLCBOZXRoZXJsYW5kcyA6IE1vcmdhbiBLYXVmbWFubiwgMjAxNSIsIsKpMjAxNSJdLCJkYXRlcyI6W3sia2luZCI6IlB1YmxpY2F0aW9uIGRhdGUiLCJ2YWx1ZSI6IjIwMTUifV0sIm5vdGVzIjpbeyJraW5kIjoiVGl0bGUgU3RhdGVtZW50IG9mIFJlc3BvbnNpYmlsaXR5IiwidmFsdWUiOlsiVy4gSC4gSW5tb24sIERhbiBMaW5zdGVkdCA7IFN0ZXZlbiBFbGxpb3QsIGV4ZWN1dGl2ZSBlZGl0b3IgOyBNYXJrIFJvZ2VycywgZGVzaWduZXIiXX0seyJraW5kIjoiR2VuZXJhbCBOb3RlIiwidmFsdWUiOlsiSW5jbHVkZXMgaW5kZXgiXX0seyJraW5kIjoiU291cmNlIG9mIERlc2NyaXB0aW9uIE5vdGUiLCJ2YWx1ZSI6WyJEZXNjcmlwdGlvbiBiYXNlZCBvbiBwcmludCB2ZXJzaW9uIHJlY29yZCJdfV0sImhpZ2hsaWdodCI6W3sibWF0Y2hlZEZpZWxkIjoidGl0bGUiLCJtYXRjaGVkUGhyYXNlcyI6WyJcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VEYXRhXHUwMDNjL3NwYW5cdTAwM2UgYXJjaGl0ZWN0dXJlIDogYSBwcmltZXIgZm9yIHRoZSBcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VkYXRhXHUwMDNjL3NwYW5cdTAwM2Ugc2NpZW50aXN0IDogYmlnIFx1MDAzY3NwYW4gY2xhc3M9XCJoaWdobGlnaHRcIlx1MDAzZWRhdGFcdTAwM2Mvc3Bhblx1MDAzZSwgXHUwMDNjc3BhbiBjbGFzcz1cImhpZ2hsaWdodFwiXHUwMDNlZGF0YVx1MDAzYy9zcGFuXHUwMDNlIHdhcmVob3VzZSBhbmQgXHUwMDNjc3BhbiBjbGFzcz1cImhpZ2hsaWdodFwiXHUwMDNlZGF0YVx1MDAzYy9zcGFuXHUwMDNlIHZhdWx0Il19XSwic291cmNlTGluayI6Imh0dHBzOi8vbWl0LnByaW1vLmV4bGlicmlzZ3JvdXAuY29tL2Rpc2NvdmVyeS9mdWxsZGlzcGxheT92aWQ9MDFNSVRfSU5TVDpNSVRcdTAwMjZkb2NpZD1hbG1hOTkzNTA2ODAwNzYwNjc2MSJ9LHsidGltZGV4UmVjb3JkSWQiOiJhbG1hOjk5MzUxMTQ0NTI5MDY3NjEiLCJ0aXRsZSI6IkphdmEgZGF0YSBhbmFseXNpcyA6IGRhdGEgbWluaW5nLCBiaWcgZGF0YSBhbmFseXNpcywgTm9TUUwsIGFuZCBkYXRhIHZpc3VhbGl6YXRpb24iLCJjb250ZW50VHlwZSI6WyJMYW5ndWFnZSBtYXRlcmlhbCJdLCJjb250cmlidXRvcnMiOlt7ImtpbmQiOiJhdXRob3IiLCJ2YWx1ZSI6Ikh1YmJhcmQsIEpvaG4gUiJ9XSwicHVibGljYXRpb25JbmZvcm1hdGlvbiI6WyJCaXJtaW5naGFtLCBFbmdsYW5kIDsgTXVtYmFpLCBbSW5kaWFdIDogUGFja3QgUHVibGlzaGluZywgMjAxNyIsIsKpMjAxNyJdLCJkYXRlcyI6W3sia2luZCI6IlB1YmxpY2F0aW9uIGRhdGUiLCJ2YWx1ZSI6IjIwMTcifV0sIm5vdGVzIjpbeyJraW5kIjoiVGl0bGUgU3RhdGVtZW50IG9mIFJlc3BvbnNpYmlsaXR5IiwidmFsdWUiOlsiSm9obiBSLiBIdWJiYXJkIl19LHsia2luZCI6IkdlbmVyYWwgTm90ZSIsInZhbHVlIjpbIkluY2x1ZGVzIGluZGV4Il19LHsia2luZCI6IlNvdXJjZSBvZiBEZXNjcmlwdGlvbiBOb3RlIiwidmFsdWUiOlsiRGVzY3JpcHRpb24gYmFzZWQgb24gb25saW5lIHJlc291cmNlOyB0aXRsZSBmcm9tIFBERiB0aXRsZSBwYWdlIChlYnJhcnksIHZpZXdlZCBPY3RvYmVyIDE4LCAyMDE3KSJdfV0sImhpZ2hsaWdodCI6W3sibWF0Y2hlZEZpZWxkIjoidGl0bGUiLCJtYXRjaGVkUGhyYXNlcyI6WyJKYXZhIFx1MDAzY3NwYW4gY2xhc3M9XCJoaWdobGlnaHRcIlx1MDAzZWRhdGFcdTAwM2Mvc3Bhblx1MDAzZSBhbmFseXNpcyA6IFx1MDAzY3NwYW4gY2xhc3M9XCJoaWdobGlnaHRcIlx1MDAzZWRhdGFcdTAwM2Mvc3Bhblx1MDAzZSBtaW5pbmcsIGJpZyBcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VkYXRhXHUwMDNjL3NwYW5cdTAwM2UgYW5hbHlzaXMsIE5vU1FMLCBhbmQgXHUwMDNjc3BhbiBjbGFzcz1cImhpZ2hsaWdodFwiXHUwMDNlZGF0YVx1MDAzYy9zcGFuXHUwMDNlIHZpc3VhbGl6YXRpb24iXX1dLCJzb3VyY2VMaW5rIjoiaHR0cHM6Ly9taXQucHJpbW8uZXhsaWJyaXNncm91cC5jb20vZGlzY292ZXJ5L2Z1bGxkaXNwbGF5P3ZpZD0wMU1JVF9JTlNUOk1JVFx1MDAyNmRvY2lkPWFsbWE5OTM1MTE0NDUyOTA2NzYxIn0seyJ0aW1kZXhSZWNvcmRJZCI6ImFsbWE6OTkwMDA0NjAzNjQwMTA2NzYxIiwidGl0bGUiOiJEYXRhIHdpdGggc2VtYW50aWNzIDogZGF0YSBtb2RlbHMgYW5kIGRhdGEgbWFuYWdlbWVudCIsImNvbnRlbnRUeXBlIjpbIkxhbmd1YWdlIG1hdGVyaWFsIl0sImNvbnRyaWJ1dG9ycyI6W3sia2luZCI6Ik5vdCBzcGVjaWZpZWQiLCJ2YWx1ZSI6IlRob21wc29uLCBKLiBQYXRyaWNrIn1dLCJwdWJsaWNhdGlvbkluZm9ybWF0aW9uIjpbIk5ldyBZb3JrIDogVmFuIE5vc3RyYW5kIFJlaW5ob2xkLCBjMTk4OSJdLCJkYXRlcyI6W3sia2luZCI6IlB1YmxpY2F0aW9uIGRhdGUiLCJ2YWx1ZSI6IjE5ODkifV0sIm5vdGVzIjpbeyJraW5kIjoiVGl0bGUgU3RhdGVtZW50IG9mIFJlc3BvbnNpYmlsaXR5IiwidmFsdWUiOlsiSi4gUGF0cmljayBUaG9tcHNvbiJdfSx7ImtpbmQiOiJHZW5lcmFsIE5vdGUiLCJ2YWx1ZSI6WyJJbmNsdWRlcyBpbmRleCJdfSx7ImtpbmQiOiJCaWJsaW9ncmFwaHkgTm90ZSIsInZhbHVlIjpbIkJpYmxpb2dyYXBoeTogcC4gNDY1LTQ2OCJdfV0sImhpZ2hsaWdodCI6W3sibWF0Y2hlZEZpZWxkIjoidGl0bGUiLCJtYXRjaGVkUGhyYXNlcyI6WyJcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VEYXRhXHUwMDNjL3NwYW5cdTAwM2Ugd2l0aCBzZW1hbnRpY3MgOiBcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VkYXRhXHUwMDNjL3NwYW5cdTAwM2UgbW9kZWxzIGFuZCBcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VkYXRhXHUwMDNjL3NwYW5cdTAwM2UgbWFuYWdlbWVudCJdfV0sInNvdXJjZUxpbmsiOiJodHRwczovL21pdC5wcmltby5leGxpYnJpc2dyb3VwLmNvbS9kaXNjb3ZlcnkvZnVsbGRpc3BsYXk/dmlkPTAxTUlUX0lOU1Q6TUlUXHUwMDI2ZG9jaWQ9YWxtYTk5MDAwNDYwMzY0MDEwNjc2MSJ9LHsidGltZGV4UmVjb3JkSWQiOiJhbG1hOjk5MzU0Mjg5MTEwMDY3NjEiLCJ0aXRsZSI6IlRoZSBkYXRhIHJldm9sdXRpb24gOiBhIGNyaXRpY2FsIGFuYWx5c2lzIG9mIGJpZyBkYXRhLCBvcGVuIGRhdGEgXHUwMDI2IGRhdGEgaW5mcmFzdHJ1Y3R1cmVzIiwiY29udGVudFR5cGUiOlsiTGFuZ3VhZ2UgbWF0ZXJpYWwiXSwiY29udHJpYnV0b3JzIjpbeyJraW5kIjoiYXV0aG9yIiwidmFsdWUiOiJLaXRjaGluLCBSb2IifV0sInB1YmxpY2F0aW9uSW5mb3JtYXRpb24iOlsiTG9zIEFuZ2VsZXMsIENBIDogU2FnZSBQdWJsaWNhdGlvbnMsIFsyMDIyXSJdLCJkYXRlcyI6W3sia2luZCI6IlB1YmxpY2F0aW9uIGRhdGUiLCJ2YWx1ZSI6IjIwMjIifV0sIm5vdGVzIjpbeyJraW5kIjoiVGl0bGUgU3RhdGVtZW50IG9mIFJlc3BvbnNpYmlsaXR5IiwidmFsdWUiOlsiUm9iIEtpdGNoaW4iXX0seyJraW5kIjoiQmlibGlvZ3JhcGh5IE5vdGUiLCJ2YWx1ZSI6WyJJbmNsdWRlcyBiaWJsaW9ncmFwaGljYWwgcmVmZXJlbmNlcyAocGFnZXMgMzA5LTM0NSkgYW5kIGluZGV4Il19XSwiaGlnaGxpZ2h0IjpbeyJtYXRjaGVkRmllbGQiOiJ0aXRsZSIsIm1hdGNoZWRQaHJhc2VzIjpbIlRoZSBcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VkYXRhXHUwMDNjL3NwYW5cdTAwM2UgcmV2b2x1dGlvbiA6IGEgY3JpdGljYWwgYW5hbHlzaXMgb2YgYmlnIFx1MDAzY3NwYW4gY2xhc3M9XCJoaWdobGlnaHRcIlx1MDAzZWRhdGFcdTAwM2Mvc3Bhblx1MDAzZSwgb3BlbiBcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VkYXRhXHUwMDNjL3NwYW5cdTAwM2UgXHUwMDI2IFx1MDAzY3NwYW4gY2xhc3M9XCJoaWdobGlnaHRcIlx1MDAzZWRhdGFcdTAwM2Mvc3Bhblx1MDAzZSBpbmZyYXN0cnVjdHVyZXMiXX1dLCJzb3VyY2VMaW5rIjoiaHR0cHM6Ly9taXQucHJpbW8uZXhsaWJyaXNncm91cC5jb20vZGlzY292ZXJ5L2Z1bGxkaXNwbGF5P3ZpZD0wMU1JVF9JTlNUOk1JVFx1MDAyNmRvY2lkPWFsbWE5OTM1NDI4OTExMDA2NzYxIn0seyJ0aW1kZXhSZWNvcmRJZCI6ImFsbWE6OTkzNTE4MTI0NTUwNjc2MSIsInRpdGxlIjoiSW50ZWxsaWdlbnQgZGF0YSBhbmFseXNpcyA6IGZyb20gZGF0YSBnYXRoZXJpbmcgdG8gZGF0YSBjb21wcmVoZW5zaW9uIiwiY29udGVudFR5cGUiOlsiTGFuZ3VhZ2UgbWF0ZXJpYWwiXSwiY29udHJpYnV0b3JzIjpbeyJraW5kIjoiZWRpdG9yIiwidmFsdWUiOiJHdXB0YSwgRGVlcGFrIn1dLCJwdWJsaWNhdGlvbkluZm9ybWF0aW9uIjpbIkhvYm9rZW4sIE5KIDogV2lsZXksIDIwMjAiLCLCqTIwMjAiXSwiZGF0ZXMiOlt7ImtpbmQiOiJQdWJsaWNhdGlvbiBkYXRlIiwidmFsdWUiOiIyMDIwIn1dLCJub3RlcyI6W3sia2luZCI6IlRpdGxlIFN0YXRlbWVudCBvZiBSZXNwb25zaWJpbGl0eSIsInZhbHVlIjpbImVkaXRlZCBieSBEZWVwYWsgR3VwdGEgW2FuZCB0aHJlZSBvdGhlcnNdIl19LHsia2luZCI6IkJpYmxpb2dyYXBoeSBOb3RlIiwidmFsdWUiOlsiSW5jbHVkZXMgYmlibGlvZ3JhcGhpY2FsIHJlZmVyZW5jZXMgYW5kIGluZGV4Il19LHsia2luZCI6IlNvdXJjZSBvZiBEZXNjcmlwdGlvbiBOb3RlIiwidmFsdWUiOlsiRGVzY3JpcHRpb24gYmFzZWQgb24gcHJpbnQgdmVyc2lvbiByZWNvcmQiXX1dLCJoaWdobGlnaHQiOlt7Im1hdGNoZWRGaWVsZCI6InRpdGxlIiwibWF0Y2hlZFBocmFzZXMiOlsiSW50ZWxsaWdlbnQgXHUwMDNjc3BhbiBjbGFzcz1cImhpZ2hsaWdodFwiXHUwMDNlZGF0YVx1MDAzYy9zcGFuXHUwMDNlIGFuYWx5c2lzIDogZnJvbSBcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VkYXRhXHUwMDNjL3NwYW5cdTAwM2UgZ2F0aGVyaW5nIHRvIFx1MDAzY3NwYW4gY2xhc3M9XCJoaWdobGlnaHRcIlx1MDAzZWRhdGFcdTAwM2Mvc3Bhblx1MDAzZSBjb21wcmVoZW5zaW9uIl19XSwic291cmNlTGluayI6Imh0dHBzOi8vbWl0LnByaW1vLmV4bGlicmlzZ3JvdXAuY29tL2Rpc2NvdmVyeS9mdWxsZGlzcGxheT92aWQ9MDFNSVRfSU5TVDpNSVRcdTAwMjZkb2NpZD1hbG1hOTkzNTE4MTI0NTUwNjc2MSJ9LHsidGltZGV4UmVjb3JkSWQiOiJhbG1hOjk5MDAwOTM4NDU3MDEwNjc2MSIsInRpdGxlIjoiZS1EYXRhIDogdHVybmluZyBkYXRhIGludG8gaW5mb3JtYXRpb24gd2l0aCBkYXRhIHdhcmVob3VzaW5nIiwiY29udGVudFR5cGUiOlsiTGFuZ3VhZ2UgbWF0ZXJpYWwiXSwiY29udHJpYnV0b3JzIjpbeyJraW5kIjoiTm90IHNwZWNpZmllZCIsInZhbHVlIjoiRHljaGXMgSwgSmlsbCJ9XSwicHVibGljYXRpb25JbmZvcm1hdGlvbiI6WyJSZWFkaW5nLCBNYXNzLiA6IEFkZGlzb24tV2VzbGV5LCBjMjAwMCJdLCJkYXRlcyI6W3sia2luZCI6IlB1YmxpY2F0aW9uIGRhdGUiLCJ2YWx1ZSI6IjIwMDAifV0sIm5vdGVzIjpbeyJraW5kIjoiVGl0bGUgU3RhdGVtZW50IG9mIFJlc3BvbnNpYmlsaXR5IiwidmFsdWUiOlsiSmlsbCBEeWNoZcyBIl19LHsia2luZCI6IkJpYmxpb2dyYXBoeSBOb3RlIiwidmFsdWUiOlsiSW5jbHVkZXMgYmlibGlvZ3JhcGhpY2FsIHJlZmVyZW5jZXMgYW5kIGluZGV4Il19XSwiaGlnaGxpZ2h0IjpbeyJtYXRjaGVkRmllbGQiOiJ0aXRsZSIsIm1hdGNoZWRQaHJhc2VzIjpbImUtXHUwMDNjc3BhbiBjbGFzcz1cImhpZ2hsaWdodFwiXHUwMDNlRGF0YVx1MDAzYy9zcGFuXHUwMDNlIDogdHVybmluZyBcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VkYXRhXHUwMDNjL3NwYW5cdTAwM2UgaW50byBpbmZvcm1hdGlvbiB3aXRoIFx1MDAzY3NwYW4gY2xhc3M9XCJoaWdobGlnaHRcIlx1MDAzZWRhdGFcdTAwM2Mvc3Bhblx1MDAzZSB3YXJlaG91c2luZyJdfV0sInNvdXJjZUxpbmsiOiJodHRwczovL21pdC5wcmltby5leGxpYnJpc2dyb3VwLmNvbS9kaXNjb3ZlcnkvZnVsbGRpc3BsYXk/dmlkPTAxTUlUX0lOU1Q6TUlUXHUwMDI2ZG9jaWQ9YWxtYTk5MDAwOTM4NDU3MDEwNjc2MSJ9LHsidGltZGV4UmVjb3JkSWQiOiJhc3BhY2U6cmVwb3NpdG9yaWVzLTItcmVzb3VyY2VzLTEyNzMiLCJ0aXRsZSI6IlwiRGF0YSBEcml2ZW5cIiBGaWxtIEludGVydmlld3MgQ29sbGVjdGlvbiIsImNvbnRlbnRUeXBlIjpbIkFyY2hpdmFsIG1hdGVyaWFscyJdLCJjb250cmlidXRvcnMiOlt7ImtpbmQiOiJzb3VyY2UiLCJ2YWx1ZSI6Ilplcm5pa2UsIEthdGUifSx7ImtpbmQiOiJzb3VyY2UiLCJ2YWx1ZSI6IlN0dWJiZSwgSm9Bbm5lIn0seyJraW5kIjoic291cmNlIiwidmFsdWUiOiJTaXZlLCBIYXplbCBMLiJ9LHsia2luZCI6InNvdXJjZSIsInZhbHVlIjoiU2Nod2V0dG1hbm4sIFNhcmFoIn0seyJraW5kIjoic291cmNlIiwidmFsdWUiOiJSb3lkZW4sIExlaWdoIEhhbmR5In0seyJraW5kIjoic291cmNlIiwidmFsdWUiOiJNYWxhbm90dGUtUml6em9saSwgUGFvbGEsIDE5NDYtIn0seyJraW5kIjoic291cmNlIiwidmFsdWUiOiJQYXJkdWUsIE1hcnkgTG91In0seyJraW5kIjoic291cmNlIiwidmFsdWUiOiJPcnItV2VhdmVyLCBUZXJyeSBMLiJ9LHsia2luZCI6InNvdXJjZSIsInZhbHVlIjoiTWNOdXR0LCBNYXJjaWEgS2VtcGVyLCAxOTUyLSJ9LHsia2luZCI6InNvdXJjZSIsInZhbHVlIjoiTGVobWFubiwgUnV0aCJ9LHsia2luZCI6InNvdXJjZSIsInZhbHVlIjoiSG9wa2lucywgTmFuY3kgKE5hbmN5IEguKSJ9LHsia2luZCI6InNvdXJjZSIsInZhbHVlIjoiR2lic29uLCBMb3JuYSBKLiJ9LHsia2luZCI6InNvdXJjZSIsInZhbHVlIjoiQ2hpc2hvbG0sIFNhbGxpZSBXLiJ9LHsia2luZCI6InNvdXJjZSIsInZhbHVlIjoiQ2V5ZXIsIFN5bHZpYSBUZXJlc3NlIn0seyJraW5kIjoic291cmNlIiwidmFsdWUiOiJCaGF0aWEsIFNhbmdlZXRhLCAxOTY4LSJ9LHsia2luZCI6InNvdXJjZSIsInZhbHVlIjoiQmFpbHluLCBMb3R0ZSJ9LHsia2luZCI6IkNyZWF0b3IiLCJ2YWx1ZSI6IldpY2tlZCBEZWxpY2F0ZSBGaWxtcyJ9LHsia2luZCI6IkNyZWF0b3IiLCJ2YWx1ZSI6Ik1hc3NhY2h1c2V0dHMgSW5zdGl0dXRlIG9mIFRlY2hub2xvZ3kuIE1JVCBQcmVzcyJ9XSwicHVibGljYXRpb25JbmZvcm1hdGlvbiI6WyJNYXNzYWNodXNldHRzIEluc3RpdHV0ZSBvZiBUZWNobm9sb2d5LiBMaWJyYXJpZXMuIERlcGFydG1lbnQgb2YgRGlzdGluY3RpdmUgQ29sbGVjdGlvbnMiXSwiZGF0ZXMiOlt7ImtpbmQiOiJjcmVhdGlvbiIsInZhbHVlIjoiMjAxOC0wOC0yOCJ9XSwibm90ZXMiOlt7ImtpbmQiOiJIaXN0b3JpY2FsIE5vdGUiLCJ2YWx1ZSI6WyJBIFN0dWR5IG9uIHRoZSBTdGF0dXMgb2YgV29tZW4gRmFjdWx0eSBpbiB0aGUgU2Nob29sIG9mIFNjaWVuY2UgYXQgTUlUOiBIb3cgYSBDb21taXR0ZWUgb24gV29tZW4gRmFjdWx0eSBjYW1lIHRvIGJlIGVzdGFibGlzaGVkIGJ5IHRoZSBEZWFuIG9mIHRoZSBTY2hvb2wgb2YgU2NpZW5jZSwgd2hhdCB0aGUgQ29tbWl0dGVlIGFuZCB0aGUgRGVhbiBsZWFybmVkIGFuZCBhY2NvbXBsaXNoZWQsIGFuZCByZWNvbW1lbmRhdGlvbnMgZm9yIHRoZSBmdXR1cmUuIE1JVCBGYWN1bHR5IE5ld3NsZXR0ZXIgLCBNYXJjaCAxOTk5LiIsIkluIDE5OTUgdGhlIERlYW4gb2YgU2NpZW5jZSBlc3RhYmxpc2hlZCBhIENvbW1pdHRlZSB0byBhbmFseXplIHRoZSBzdGF0dXMgb2Ygd29tZW4gZmFjdWx0eSBpbiB0aGUgc2l4IGRlcGFydG1lbnRzIGluIHRoZSBTY2hvb2wgb2YgU2NpZW5jZSBhdCB0aGUgTWFzc2NodXNldHRzIEluc3RpdHV0ZSBvZiBUZWNobm9sb2d5IChNSVQpLiBUaGUgQ29tbWl0dGVlIHN1Ym1pdHRlZCBhIHJlcG9ydCBvZiBpdHMgZmluZGluZ3MgaW4gQXVndXN0LCAxOTk2IGFuZCBhbWVuZGVkIHJlcG9ydHMgaW4gMTk5NyBhbmQgMTk5OC4gVGhlIENvbW1pdHRlZSBkaXNjb3ZlcmVkIHRoYXQganVuaW9yIHdvbWVuIGZhY3VsdHkgZmVsdCB3ZWxsIHN1cHBvcnRlZCB3aXRoaW4gdGhlaXIgZGVwYXJ0bWVudHMuIEluIGNvbnRyYXN0IHRvIGp1bmlvciB3b21lbiwgbWFueSB0ZW51cmVkIHdvbWVuIGZhY3VsdHkgZmVsdCBtYXJnaW5hbGl6ZWQgYW5kIGV4Y2x1ZGVkIGZyb20gYSBzaWduaWZpY2FudCByb2xlIGluIHRoZWlyIGRlcGFydG1lbnRzLiBNYXJnaW5hbGl6YXRpb24gaW5jcmVhc2VkIGFzIHdvbWVuIHByb2dyZXNzZWQgdGhyb3VnaCB0aGVpciBjYXJlZXJzIGF0IE1JVC4iLCJWaWV3IHRoZSBNYXJjaCAxOTk5IE1JVCBGYWN1bHR5IE5ld3NsZXR0ZXIgZm9yIG1vcmUgaW5mb3JtYXRpb24gb24gdGhpcyByZXBvcnQuIl19LHsia2luZCI6IlNjb3BlIGFuZCBDb250ZW50cyIsInZhbHVlIjpbIlRoaXMgY29sbGVjdGlvbiBjb25zaXN0cyBvZiB2aWRlbyBpbnRlcnZpZXdzIGFuZCB0cmFuc2NyaXB0cyB3aXRoIDE3IGZlbWFsZSBNYXNzY2h1c2V0dHMgSW5zdGl0dXRlIG9mIFRlY2hub2xvZ3kgZmFjdWx0eSBtZW1iZXJzIGFuZCB0aGUgc2hvcnQgZG9jdW1lbnRhcnkgdXNpbmcgdGhlIGludGVydmlld3MsIFwiVGhlIFVwcmlzaW5nXCIuIFRoZSBpbnRlcnZpZXdzIGZvY3VzIG9uIHdvbWVuIGZhY3VsdHkgaW4gc2NpZW5jZSBhbmQgZW5naW5lZXJpbmcgYXQgTUlULCBhbmQgbW9yZSBicm9hZGx5IGdlbmRlciBlcXVpdHkgaXNzdWVzIGluIFNURU0gZmllbGRzLiBTcGVjaWZpY2FsbHkgcmVmZXJlbmNpbmcgZXZlbnRzIGRpc2N1c3NlZCB0aGUgMTk5OSByZXBvcnQsIFN0dWR5IG9uIHRoZSBTdGF0dXMgb2YgV29tZW4gRmFjdWx0eSBpbiBTY2llbmNlIGF0IE1JVC4gVGhlIGludGVydmlld3Mgd2VyZSBwcm9kdWNlZCBieSBXaWNrZWQgRGVsaWNhdGUgRmlsbXMgaW4gY29uanVuY3Rpb24gd2l0aCB0aGUgTUlUIFByZXNzIGFuZCBNSVQgTGlicmFyaWVzLiBJbnRlcnZpZXdzIG1heSBiZSB1c2VkIGluIGEgZnV0dXJlIGZpbG0sIERhdGEgRHJpdmVuLiBBIGRvY3VtZW50YXJ5IHdhcyBtYWRlIGJ5IFdpY2tlZCBEZWxpY2F0ZSBGaWxtcyBjYWxsZWQgXCJQaWN0dXJlIEEgU2NpZW50aXN0XCIgd2hpY2ggZmVhdHVyZWQgc29tZSBvZiB0aGUgZm9vdGFnZS4iXX1dLCJoaWdobGlnaHQiOlt7Im1hdGNoZWRGaWVsZCI6InRpdGxlIiwibWF0Y2hlZFBocmFzZXMiOlsiXCJcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VEYXRhXHUwMDNjL3NwYW5cdTAwM2UgRHJpdmVuXCIgRmlsbSBJbnRlcnZpZXdzIENvbGxlY3Rpb24iXX1dLCJzb3VyY2VMaW5rIjoiaHR0cHM6Ly9hcmNoaXZlc3NwYWNlLm1pdC5lZHUvcmVwb3NpdG9yaWVzLzIvcmVzb3VyY2VzLzEyNzMifSx7InRpbWRleFJlY29yZElkIjoiYWxtYTo5OTM1NTExMDQ0MDA2NzYxIiwidGl0bGUiOiJEYXRhIHByb3RlY3Rpb24gZW5zdXJpbmcgZGF0YSBhdmFpbGFiaWxpdHkiLCJjb250ZW50VHlwZSI6WyJMYW5ndWFnZSBtYXRlcmlhbCJdLCJjb250cmlidXRvcnMiOlt7ImtpbmQiOiJOb3Qgc3BlY2lmaWVkIiwidmFsdWUiOiJEZSBHdWlzZSwgUHJlc3RvbiJ9XSwicHVibGljYXRpb25JbmZvcm1hdGlvbiI6WyJCb2NhIFJhdG9uLCBGTCA6IEF1ZXJiYWNoIFB1YmxpY2F0aW9ucy9DUkMgUHJlc3MsIDIwMjAiXSwiZGF0ZXMiOlt7ImtpbmQiOiJQdWJsaWNhdGlvbiBkYXRlIiwidmFsdWUiOiIyMDIwIn1dLCJub3RlcyI6W3sia2luZCI6IlRpdGxlIFN0YXRlbWVudCBvZiBSZXNwb25zaWJpbGl0eSIsInZhbHVlIjpbImJ5IFByZXN0b24gRGUgR3Vpc2UiXX0seyJraW5kIjoiR2VuZXJhbCBOb3RlIiwidmFsdWUiOlsiNi41IFNlbGYtUmVmbGVjdGlvbiJdfSx7ImtpbmQiOiJTb3VyY2Ugb2YgRGVzY3JpcHRpb24gTm90ZSIsInZhbHVlIjpbIk9DTEMtbGljZW5zZWQgdmVuZG9yIGJpYmxpb2dyYXBoaWMgcmVjb3JkIl19XSwiaGlnaGxpZ2h0IjpbeyJtYXRjaGVkRmllbGQiOiJ0aXRsZSIsIm1hdGNoZWRQaHJhc2VzIjpbIlx1MDAzY3NwYW4gY2xhc3M9XCJoaWdobGlnaHRcIlx1MDAzZURhdGFcdTAwM2Mvc3Bhblx1MDAzZSBwcm90ZWN0aW9uIGVuc3VyaW5nIFx1MDAzY3NwYW4gY2xhc3M9XCJoaWdobGlnaHRcIlx1MDAzZWRhdGFcdTAwM2Mvc3Bhblx1MDAzZSBhdmFpbGFiaWxpdHkiXX1dLCJzb3VyY2VMaW5rIjoiaHR0cHM6Ly9taXQucHJpbW8uZXhsaWJyaXNncm91cC5jb20vZGlzY292ZXJ5L2Z1bGxkaXNwbGF5P3ZpZD0wMU1JVF9JTlNUOk1JVFx1MDAyNmRvY2lkPWFsbWE5OTM1NTExMDQ0MDA2NzYxIn0seyJ0aW1kZXhSZWNvcmRJZCI6ImFsbWE6OTkzNTE4MTAxNTYwNjc2MSIsInRpdGxlIjoiRGF0YSBhbmFseXRpY3MgYW5kIGJpZyBkYXRhIiwiY29udGVudFR5cGUiOlsiTGFuZ3VhZ2UgbWF0ZXJpYWwiXSwiY29udHJpYnV0b3JzIjpbeyJraW5kIjoiYXV0aG9yIiwidmFsdWUiOiJTZWRrYW91aSwgU29yYXlhIn1dLCJwdWJsaWNhdGlvbkluZm9ybWF0aW9uIjpbIkhvYm9rZW4sIE5ldyBKZXJzZXkgOiBJU1RFIEx0ZC9Kb2huIFdpbGV5IGFuZCBTb25zIEluYywgMjAxOCJdLCJkYXRlcyI6W3sia2luZCI6IlB1YmxpY2F0aW9uIGRhdGUiLCJ2YWx1ZSI6IjIwMTgifV0sIm5vdGVzIjpbeyJraW5kIjoiVGl0bGUgU3RhdGVtZW50IG9mIFJlc3BvbnNpYmlsaXR5IiwidmFsdWUiOlsiU29yYXlhIFNlZGthb3VpIl19LHsia2luZCI6IkJpYmxpb2dyYXBoeSBOb3RlIiwidmFsdWUiOlsiSW5jbHVkZXMgYmlibGlvZ3JhcGhpY2FsIHJlZmVyZW5jZXMgYW5kIGluZGV4Il19LHsia2luZCI6IlNvdXJjZSBvZiBEZXNjcmlwdGlvbiBOb3RlIiwidmFsdWUiOlsiRGVzY3JpcHRpb24gYmFzZWQgb24gcHJpbnQgdmVyc2lvbiByZWNvcmQiXX1dLCJoaWdobGlnaHQiOlt7Im1hdGNoZWRGaWVsZCI6InRpdGxlIiwibWF0Y2hlZFBocmFzZXMiOlsiXHUwMDNjc3BhbiBjbGFzcz1cImhpZ2hsaWdodFwiXHUwMDNlRGF0YVx1MDAzYy9zcGFuXHUwMDNlIGFuYWx5dGljcyBhbmQgYmlnIFx1MDAzY3NwYW4gY2xhc3M9XCJoaWdobGlnaHRcIlx1MDAzZWRhdGFcdTAwM2Mvc3Bhblx1MDAzZSJdfV0sInNvdXJjZUxpbmsiOiJodHRwczovL21pdC5wcmltby5leGxpYnJpc2dyb3VwLmNvbS9kaXNjb3ZlcnkvZnVsbGRpc3BsYXk/dmlkPTAxTUlUX0lOU1Q6TUlUXHUwMDI2ZG9jaWQ9YWxtYTk5MzUxODEwMTU2MDY3NjEifSx7InRpbWRleFJlY29yZElkIjoiYWxtYTo5OTM1MDg0MDI0NDA2NzYxIiwidGl0bGUiOiJEYXRhIFByZXByb2Nlc3NpbmcgaW4gRGF0YSBNaW5pbmciLCJjb250ZW50VHlwZSI6WyJMYW5ndWFnZSBtYXRlcmlhbCJdLCJjb250cmlidXRvcnMiOlt7ImtpbmQiOiJhdXRob3IiLCJ2YWx1ZSI6IkdhcmPDrWEsIFNhbHZhZG9yIn0seyJraW5kIjoiYXV0aG9yIiwidmFsdWUiOiJMdWVuZ28sIEp1bGnDoW4ifSx7ImtpbmQiOiJhdXRob3IiLCJ2YWx1ZSI6IkhlcnJlcmEsIEZyYW5jaXNjbyJ9XSwicHVibGljYXRpb25JbmZvcm1hdGlvbiI6WyJDaGFtIDogU3ByaW5nZXIgSW50ZXJuYXRpb25hbCBQdWJsaXNoaW5nIDogSW1wcmludDogU3ByaW5nZXIsIDIwMTUiXSwiZGF0ZXMiOlt7ImtpbmQiOiJQdWJsaWNhdGlvbiBkYXRlIiwidmFsdWUiOiIyMDE1In1dLCJub3RlcyI6W3sia2luZCI6IlRpdGxlIFN0YXRlbWVudCBvZiBSZXNwb25zaWJpbGl0eSIsInZhbHVlIjpbImJ5IFNhbHZhZG9yIEdhcmPDrWEsIEp1bGnDoW4gTHVlbmdvLCBGcmFuY2lzY28gSGVycmVyYSJdfSx7ImtpbmQiOiJHZW5lcmFsIE5vdGUiLCJ2YWx1ZSI6WyJEZXNjcmlwdGlvbiBiYXNlZCB1cG9uIHByaW50IHZlcnNpb24gb2YgcmVjb3JkIl19LHsia2luZCI6IkJpYmxpb2dyYXBoeSBOb3RlIiwidmFsdWUiOlsiSW5jbHVkZXMgYmlibGlvZ3JhcGhpY2FsIHJlZmVyZW5jZXMgYW5kIGluZGV4Il19XSwiaGlnaGxpZ2h0IjpbeyJtYXRjaGVkRmllbGQiOiJ0aXRsZSIsIm1hdGNoZWRQaHJhc2VzIjpbIlx1MDAzY3NwYW4gY2xhc3M9XCJoaWdobGlnaHRcIlx1MDAzZURhdGFcdTAwM2Mvc3Bhblx1MDAzZSBQcmVwcm9jZXNzaW5nIGluIFx1MDAzY3NwYW4gY2xhc3M9XCJoaWdobGlnaHRcIlx1MDAzZURhdGFcdTAwM2Mvc3Bhblx1MDAzZSBNaW5pbmciXX1dLCJzb3VyY2VMaW5rIjoiaHR0cHM6Ly9taXQucHJpbW8uZXhsaWJyaXNncm91cC5jb20vZGlzY292ZXJ5L2Z1bGxkaXNwbGF5P3ZpZD0wMU1JVF9JTlNUOk1JVFx1MDAyNmRvY2lkPWFsbWE5OTM1MDg0MDI0NDA2NzYxIn0seyJ0aW1kZXhSZWNvcmRJZCI6ImFsbWE6OTkwMDIxMjQ2MDAwMTA2NzYxIiwidGl0bGUiOiJEYXRhIG1pbmluZyBhbmQgZGF0YSB3YXJlaG91c2luZyIsImNvbnRlbnRUeXBlIjpbIkxhbmd1YWdlIG1hdGVyaWFsIl0sImNvbnRyaWJ1dG9ycyI6W3sia2luZCI6Ik5vdCBzcGVjaWZpZWQiLCJ2YWx1ZSI6Ik1vdXJ5YSwgUy4gSyJ9LHsia2luZCI6Ik5vdCBzcGVjaWZpZWQiLCJ2YWx1ZSI6Ikd1cHRhLCBTaGFsdSJ9XSwicHVibGljYXRpb25JbmZvcm1hdGlvbiI6WyJPeGZvcmQsIFUuSy4gOiBBbHBoYSBTY2llbmNlIEludGVybmF0aW9uYWwgTHRkLiwgYzIwMTMiXSwiZGF0ZXMiOlt7ImtpbmQiOiJQdWJsaWNhdGlvbiBkYXRlIiwidmFsdWUiOiIyMDEzIn1dLCJub3RlcyI6W3sia2luZCI6IlRpdGxlIFN0YXRlbWVudCBvZiBSZXNwb25zaWJpbGl0eSIsInZhbHVlIjpbIlMuSy4gTW91cnlhLCBTaGFsdSBHdXB0YSJdfSx7ImtpbmQiOiJHZW5lcmFsIE5vdGUiLCJ2YWx1ZSI6WyJJbmNsdWRlcyBpbmRleCJdfV0sImhpZ2hsaWdodCI6W3sibWF0Y2hlZEZpZWxkIjoidGl0bGUiLCJtYXRjaGVkUGhyYXNlcyI6WyJcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VEYXRhXHUwMDNjL3NwYW5cdTAwM2UgbWluaW5nIGFuZCBcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VkYXRhXHUwMDNjL3NwYW5cdTAwM2Ugd2FyZWhvdXNpbmciXX1dLCJzb3VyY2VMaW5rIjoiaHR0cHM6Ly9taXQucHJpbW8uZXhsaWJyaXNncm91cC5jb20vZGlzY292ZXJ5L2Z1bGxkaXNwbGF5P3ZpZD0wMU1JVF9JTlNUOk1JVFx1MDAyNmRvY2lkPWFsbWE5OTAwMjEyNDYwMDAxMDY3NjEifSx7InRpbWRleFJlY29yZElkIjoiYWxtYTo5OTAwMTM1NDE5NzAxMDY3NjEiLCJ0aXRsZSI6IkRhdGEgbWluaW5nIGFuZCBkYXRhIHZpc3VhbGl6YXRpb24iLCJjb250ZW50VHlwZSI6WyJMYW5ndWFnZSBtYXRlcmlhbCJdLCJjb250cmlidXRvcnMiOlt7ImtpbmQiOiJOb3Qgc3BlY2lmaWVkIiwidmFsdWUiOiJSYW8sIEMuIFJhZGhha3Jpc2huYSAoQ2FseWFtcHVkaSBSYWRoYWtyaXNobmEpIn0seyJraW5kIjoiTm90IHNwZWNpZmllZCIsInZhbHVlIjoiV2VnbWFuLCBFZHdhcmQgSiJ9LHsia2luZCI6Ik5vdCBzcGVjaWZpZWQiLCJ2YWx1ZSI6IlNvbGthLCBKZWZmcmV5IEwifV0sInB1YmxpY2F0aW9uSW5mb3JtYXRpb24iOlsiQW1zdGVyZGFtIDsgU2FuIERpZWdvLCBDQSA6IEVsc2V2aWVyIE5vcnRoIEhvbGxhbmQsIDIwMDUiXSwiZGF0ZXMiOlt7ImtpbmQiOiJQdWJsaWNhdGlvbiBkYXRlIiwidmFsdWUiOiIyMDA1In1dLCJub3RlcyI6W3sia2luZCI6IlRpdGxlIFN0YXRlbWVudCBvZiBSZXNwb25zaWJpbGl0eSIsInZhbHVlIjpbImVkaXRlZCBieSBDLlIuIFJhbywgRS5KLiBXZWdtYW4sIEouTC4gU29sa2EiXX0seyJraW5kIjoiQmlibGlvZ3JhcGh5IE5vdGUiLCJ2YWx1ZSI6WyJJbmNsdWRlcyBiaWJsaW9ncmFwaGljYWwgcmVmZXJlbmNlcyBhbmQgaW5kZXgiXX1dLCJoaWdobGlnaHQiOlt7Im1hdGNoZWRGaWVsZCI6InRpdGxlIiwibWF0Y2hlZFBocmFzZXMiOlsiXHUwMDNjc3BhbiBjbGFzcz1cImhpZ2hsaWdodFwiXHUwMDNlRGF0YVx1MDAzYy9zcGFuXHUwMDNlIG1pbmluZyBhbmQgXHUwMDNjc3BhbiBjbGFzcz1cImhpZ2hsaWdodFwiXHUwMDNlZGF0YVx1MDAzYy9zcGFuXHUwMDNlIHZpc3VhbGl6YXRpb24iXX1dLCJzb3VyY2VMaW5rIjoiaHR0cHM6Ly9taXQucHJpbW8uZXhsaWJyaXNncm91cC5jb20vZGlzY292ZXJ5L2Z1bGxkaXNwbGF5P3ZpZD0wMU1JVF9JTlNUOk1JVFx1MDAyNmRvY2lkPWFsbWE5OTAwMTM1NDE5NzAxMDY3NjEifSx7InRpbWRleFJlY29yZElkIjoiYWxtYTo5OTM1MDk1NjgwNTA2NzYxIiwidGl0bGUiOiJEYXRhIG1pbmluZyBhbmQgZGF0YSB2aXN1YWxpemF0aW9uIiwiY29udGVudFR5cGUiOlsiTGFuZ3VhZ2UgbWF0ZXJpYWwiXSwiY29udHJpYnV0b3JzIjpbeyJraW5kIjoiTm90IHNwZWNpZmllZCIsInZhbHVlIjoiUmFvLCBDLiBSYWRoYWtyaXNobmEgKENhbHlhbXB1ZGkgUmFkaGFrcmlzaG5hKSJ9LHsia2luZCI6Ik5vdCBzcGVjaWZpZWQiLCJ2YWx1ZSI6IldlZ21hbiwgRWR3YXJkIEoifSx7ImtpbmQiOiJOb3Qgc3BlY2lmaWVkIiwidmFsdWUiOiJTb2xrYSwgSmVmZnJleSBMIn1dLCJwdWJsaWNhdGlvbkluZm9ybWF0aW9uIjpbIkFtc3RlcmRhbSA7IFNhbiBEaWVnbywgQ0EgOiBFbHNldmllciBOb3J0aCBIb2xsYW5kLCAyMDA1Il0sImRhdGVzIjpbeyJraW5kIjoiUHVibGljYXRpb24gZGF0ZSIsInZhbHVlIjoiMjAwNSJ9XSwibm90ZXMiOlt7ImtpbmQiOiJUaXRsZSBTdGF0ZW1lbnQgb2YgUmVzcG9uc2liaWxpdHkiLCJ2YWx1ZSI6WyJlZGl0ZWQgYnkgQy5SLiBSYW8sIEUuSi4gV2VnbWFuLCBKLkwuIFNvbGthIl19LHsia2luZCI6IkdlbmVyYWwgTm90ZSIsInZhbHVlIjpbIkRlc2NyaXB0aW9uIGJhc2VkIHVwb24gcHJpbnQgdmVyc2lvbiBvZiByZWNvcmQiXX0seyJraW5kIjoiQmlibGlvZ3JhcGh5IE5vdGUiLCJ2YWx1ZSI6WyJJbmNsdWRlcyBiaWJsaW9ncmFwaGljYWwgcmVmZXJlbmNlcyBhbmQgaW5kZXgiXX1dLCJoaWdobGlnaHQiOlt7Im1hdGNoZWRGaWVsZCI6InRpdGxlIiwibWF0Y2hlZFBocmFzZXMiOlsiXHUwMDNjc3BhbiBjbGFzcz1cImhpZ2hsaWdodFwiXHUwMDNlRGF0YVx1MDAzYy9zcGFuXHUwMDNlIG1pbmluZyBhbmQgXHUwMDNjc3BhbiBjbGFzcz1cImhpZ2hsaWdodFwiXHUwMDNlZGF0YVx1MDAzYy9zcGFuXHUwMDNlIHZpc3VhbGl6YXRpb24iXX1dLCJzb3VyY2VMaW5rIjoiaHR0cHM6Ly9taXQucHJpbW8uZXhsaWJyaXNncm91cC5jb20vZGlzY292ZXJ5L2Z1bGxkaXNwbGF5P3ZpZD0wMU1JVF9JTlNUOk1JVFx1MDAyNmRvY2lkPWFsbWE5OTM1MDk1NjgwNTA2NzYxIn0seyJ0aW1kZXhSZWNvcmRJZCI6ImFsbWE6OTkzNTE0NjM0MzUwNjc2MSIsInRpdGxlIjoiRGF0YSBNaW5pbmcgb24gTXVsdGltZWRpYSBEYXRhIiwiY29udGVudFR5cGUiOlsiTGFuZ3VhZ2UgbWF0ZXJpYWwiXSwiY29udHJpYnV0b3JzIjpbeyJraW5kIjoiYXV0aG9yIiwidmFsdWUiOiJQZXJuZXIsIFBldHJhIn1dLCJwdWJsaWNhdGlvbkluZm9ybWF0aW9uIjpbIkJlcmxpbiwgSGVpZGVsYmVyZyA6IFNwcmluZ2VyIEJlcmxpbiBIZWlkZWxiZXJnIDogSW1wcmludDogU3ByaW5nZXIsIDIwMDMiXSwiZGF0ZXMiOlt7ImtpbmQiOiJQdWJsaWNhdGlvbiBkYXRlIiwidmFsdWUiOiIyMDAzIn1dLCJub3RlcyI6W3sia2luZCI6IlRpdGxlIFN0YXRlbWVudCBvZiBSZXNwb25zaWJpbGl0eSIsInZhbHVlIjpbImJ5IFBldHJhIFBlcm5lciJdfSx7ImtpbmQiOiJHZW5lcmFsIE5vdGUiLCJ2YWx1ZSI6WyJCaWJsaW9ncmFwaGljIExldmVsIE1vZGUgb2YgSXNzdWFuY2U6IE1vbm9ncmFwaCJdfSx7ImtpbmQiOiJCaWJsaW9ncmFwaHkgTm90ZSIsInZhbHVlIjpbIkluY2x1ZGVzIGJpYmxpb2dyYXBoaWNhbCByZWZlcmVuY2VzIGFuZCBpbmRleCJdfV0sImhpZ2hsaWdodCI6W3sibWF0Y2hlZEZpZWxkIjoidGl0bGUiLCJtYXRjaGVkUGhyYXNlcyI6WyJcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VEYXRhXHUwMDNjL3NwYW5cdTAwM2UgTWluaW5nIG9uIE11bHRpbWVkaWEgXHUwMDNjc3BhbiBjbGFzcz1cImhpZ2hsaWdodFwiXHUwMDNlRGF0YVx1MDAzYy9zcGFuXHUwMDNlIl19XSwic291cmNlTGluayI6Imh0dHBzOi8vbWl0LnByaW1vLmV4bGlicmlzZ3JvdXAuY29tL2Rpc2NvdmVyeS9mdWxsZGlzcGxheT92aWQ9MDFNSVRfSU5TVDpNSVRcdTAwMjZkb2NpZD1hbG1hOTkzNTE0NjM0MzUwNjc2MSJ9LHsidGltZGV4UmVjb3JkSWQiOiJhbG1hOjk5MDAxMTUwMzA3MDEwNjc2MSIsInRpdGxlIjoiRGF0YSBtaW5pbmcgb24gbXVsdGltZWRpYSBkYXRhIiwiY29udGVudFR5cGUiOlsiTGFuZ3VhZ2UgbWF0ZXJpYWwiXSwiY29udHJpYnV0b3JzIjpbeyJraW5kIjoiTm90IHNwZWNpZmllZCIsInZhbHVlIjoiUGVybmVyLCBQZXRyYSJ9XSwicHVibGljYXRpb25JbmZvcm1hdGlvbiI6WyJCZXJsaW4gOyBOZXcgWW9yayA6IFNwcmluZ2VyLCBjMjAwMiJdLCJkYXRlcyI6W3sia2luZCI6IlB1YmxpY2F0aW9uIGRhdGUiLCJ2YWx1ZSI6IjIwMDIifV0sIm5vdGVzIjpbeyJraW5kIjoiVGl0bGUgU3RhdGVtZW50IG9mIFJlc3BvbnNpYmlsaXR5IiwidmFsdWUiOlsiUGV0cmEgUGVybmVyIl19LHsia2luZCI6IkJpYmxpb2dyYXBoeSBOb3RlIiwidmFsdWUiOlsiSW5jbHVkZXMgYmlibGlvZ3JhcGhpY2FsIHJlZmVyZW5jZXMgKHAuIFsxMjFdLTEyOCkgYW5kIGluZGV4Il19XSwiaGlnaGxpZ2h0IjpbeyJtYXRjaGVkRmllbGQiOiJ0aXRsZSIsIm1hdGNoZWRQaHJhc2VzIjpbIlx1MDAzY3NwYW4gY2xhc3M9XCJoaWdobGlnaHRcIlx1MDAzZURhdGFcdTAwM2Mvc3Bhblx1MDAzZSBtaW5pbmcgb24gbXVsdGltZWRpYSBcdTAwM2NzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCJcdTAwM2VkYXRhXHUwMDNjL3NwYW5cdTAwM2UiXX1dLCJzb3VyY2VMaW5rIjoiaHR0cHM6Ly9taXQucHJpbW8uZXhsaWJyaXNncm91cC5jb20vZGlzY292ZXJ5L2Z1bGxkaXNwbGF5P3ZpZD0wMU1JVF9JTlNUOk1JVFx1MDAyNmRvY2lkPWFsbWE5OTAwMTE1MDMwNzAxMDY3NjEifV0sImFnZ3JlZ2F0aW9ucyI6eyJjb250ZW50VHlwZSI6W3sia2V5IjoibGFuZ3VhZ2UgbWF0ZXJpYWwiLCJkb2NDb3VudCI6MzI5MDR9LHsia2V5IjoicG9seWdvbiBkYXRhIiwiZG9jQ291bnQiOjE2ODB9LHsia2V5IjoiYXJ0aWNsZSIsImRvY0NvdW50IjoxNDEzfSx7ImtleSI6ImRhdGFzZXQiLCJkb2NDb3VudCI6MTM2Nn0seyJrZXkiOiJ0aGVzaXMiLCJkb2NDb3VudCI6MTI0N30seyJrZXkiOiJtYW51c2NyaXB0IGxhbmd1YWdlIG1hdGVyaWFsIiwiZG9jQ291bnQiOjEwNzZ9LHsia2V5IjoicHJvamVjdGVkIG1lZGl1bSIsImRvY0NvdW50Ijo5OTh9LHsia2V5IjoicG9pbnQgZGF0YSIsImRvY0NvdW50Ijo5NTR9LHsia2V5IjoidmVjdG9yIGRhdGEiLCJkb2NDb3VudCI6MzgzfSx7ImtleSI6InJhc3RlciBkYXRhIiwiZG9jQ291bnQiOjM3M31dLCJjb250cmlidXRvcnMiOlt7ImtleSI6Imdlb2xvZ2ljYWwgc3VydmV5ICh1LnMuKSIsImRvY0NvdW50IjoyNDA3fSx7ImtleSI6Im1hc3NhY2h1c2V0dHMgaW5zdGl0dXRlIG9mIHRlY2hub2xvZ3kuIGRlcGFydG1lbnQgb2YgZWxlY3RyaWNhbCBlbmdpbmVlcmluZyBhbmQgY29tcHV0ZXIgc2NpZW5jZSIsImRvY0NvdW50Ijo5NzZ9LHsia2V5IjoiaW5zdGl0dXRlIG9mIGVsZWN0cmljYWwgYW5kIGVsZWN0cm9uaWNzIGVuZ2luZWVycyIsImRvY0NvdW50Ijo4ODB9LHsia2V5IjoibmF0aW9uYWwgYnVyZWF1IG9mIGVjb25vbWljIHJlc2VhcmNoIiwiZG9jQ291bnQiOjg3N30seyJrZXkiOiJ1bml0ZWQgc3RhdGVzLiBnb3Zlcm5tZW50IGFjY291bnRhYmlsaXR5IG9mZmljZSIsImRvY0NvdW50Ijo3ODV9LHsia2V5IjoiZW52aXJvbm1lbnRhbCBzeXN0ZW1zIHJlc2VhcmNoIGluc3RpdHV0ZSAocmVkbGFuZHMsIGNhbGlmLikiLCJkb2NDb3VudCI6NzM4fSx7ImtleSI6ImVhc3QgdmlldyBjYXJ0b2dyYXBoaWMsIGluY29ycG9yYXRlZCIsImRvY0NvdW50Ijo1NjF9LHsia2V5IjoiYXNzb2NpYXRpb24gZm9yIGNvbXB1dGluZyBtYWNoaW5lcnkiLCJkb2NDb3VudCI6NDc1fSx7ImtleSI6Im1hc3NhY2h1c2V0dHMgaW5zdGl0dXRlIG9mIHRlY2hub2xvZ3kuIGRlcGFydG1lbnQgb2YgZWxlY3RyaWNhbCBlbmdpbmVlcmluZyBhbmQgY29tcHV0ZXIgc2NpZW5jZS4iLCJkb2NDb3VudCI6Mzk0fSx7ImtleSI6Im93ZW4sIGFuZHJldyIsImRvY0NvdW50IjozODN9XSwiZm9ybWF0IjpbeyJrZXkiOiJlbGVjdHJvbmljIHJlc291cmNlIiwiZG9jQ291bnQiOjQ2MTV9LHsia2V5Ijoic2hhcGVmaWxlIiwiZG9jQ291bnQiOjMwNTd9LHsia2V5IjoiZ2VvdGlmZiIsImRvY0NvdW50IjozNzN9LHsia2V5IjoiZ2VvcGFja2FnZSIsImRvY0NvdW50Ijo3OH0seyJrZXkiOiJwZGYiLCJkb2NDb3VudCI6MTl9LHsia2V5IjoianBlZyIsImRvY0NvdW50IjoxN30seyJrZXkiOiJ0aWZmIiwiZG9jQ291bnQiOjEwfV0sImxhbmd1YWdlcyI6W3sia2V5IjoiZW5nbGlzaCIsImRvY0NvdW50IjozNzI2M30seyJrZXkiOiJlbmciLCJkb2NDb3VudCI6MTY1OH0seyJrZXkiOiJlbl91cyIsImRvY0NvdW50IjoxNDI4fSx7ImtleSI6ImVuIiwiZG9jQ291bnQiOjg1MH0seyJrZXkiOiJpbiBlbmdsaXNoIiwiZG9jQ291bnQiOjQwNH0seyJrZXkiOiJvcmlnaW5hbCBsYW5ndWFnZSBpbiBlbmdsaXNoIiwiZG9jQ291bnQiOjEzM30seyJrZXkiOiJnZXJtYW4iLCJkb2NDb3VudCI6OTR9LHsia2V5IjoiZnJlbmNoIiwiZG9jQ291bnQiOjgxfSx7ImtleSI6InJ1c3NpYW4iLCJkb2NDb3VudCI6MzZ9LHsia2V5Ijoic3BhbmlzaCIsImRvY0NvdW50IjoyOH1dLCJsaXRlcmFyeUZvcm0iOlt7ImtleSI6Im5vbmZpY3Rpb24iLCJkb2NDb3VudCI6Mjc1NTl9LHsia2V5IjoiZmljdGlvbiIsImRvY0NvdW50Ijo0OTY1fV0sInBsYWNlcyI6W3sia2V5IjoiZWFydGggKHBsYW5ldCkiLCJkb2NDb3VudCI6MzU1fSx7ImtleSI6ImNoaW5hIiwiZG9jQ291bnQiOjMyMX0seyJrZXkiOiJ1bml0ZWQgc3RhdGVzIiwiZG9jQ291bnQiOjI1Nn0seyJrZXkiOiJldXJvcGUiLCJkb2NDb3VudCI6MTc5fSx7ImtleSI6InB1ZXJ0byByaWNvIiwiZG9jQ291bnQiOjE0M30seyJrZXkiOiJlY3VhZG9yIiwiZG9jQ291bnQiOjEwN30seyJrZXkiOiJyZXB1YmxpYyBvZiBlY3VhZG9yIiwiZG9jQ291bnQiOjEwN30seyJrZXkiOiJjYW5hZGEiLCJkb2NDb3VudCI6MTAxfSx7ImtleSI6ImluZGlhIiwiZG9jQ291bnQiOjg5fSx7ImtleSI6InBhcmFndWF5IiwiZG9jQ291bnQiOjg3fV0sInNvdXJjZSI6W3sia2V5IjoibWl0IGFsbWEiLCJkb2NDb3VudCI6MzU1NTF9LHsia2V5Ijoib3Blbmdlb21ldGFkYXRhIGdpcyByZXNvdXJjZXMiLCJkb2NDb3VudCI6MzUyN30seyJrZXkiOiJkc3BhY2VAbWl0IiwiZG9jQ291bnQiOjMwNzV9LHsia2V5Ijoid29vZHMgaG9sZSBvcGVuIGFjY2VzcyBzZXJ2ZXIiLCJkb2NDb3VudCI6ODExfSx7ImtleSI6Inplbm9kbyIsImRvY0NvdW50Ijo2NDd9LHsia2V5IjoiYWJkdWwgbGF0aWYgamFtZWVsIHBvdmVydHkgYWN0aW9uIGxhYiBkYXRhdmVyc2UiLCJkb2NDb3VudCI6NjB9LHsia2V5IjoibWl0IGdpcyByZXNvdXJjZXMiLCJkb2NDb3VudCI6NTF9LHsia2V5IjoicmVzZWFyY2ggZGF0YWJhc2VzIiwiZG9jQ291bnQiOjE1fSx7ImtleSI6ImxpYmd1aWRlcyIsImRvY0NvdW50Ijo3fSx7ImtleSI6Im1pdCBhcmNoaXZlc3NwYWNlIiwiZG9jQ291bnQiOjF9XSwic3ViamVjdHMiOlt7ImtleSI6InNvY2lldHkiLCJkb2NDb3VudCI6NDI4NH0seyJrZXkiOiJkYXRhc2V0cyIsImRvY0NvdW50IjozMjkwfSx7ImtleSI6ImJvdW5kYXJpZXMiLCJkb2NDb3VudCI6Mjg0Nn0seyJrZXkiOiJ1bml0ZWQgc3RhdGVzIiwiZG9jQ291bnQiOjI3NDB9LHsia2V5IjoiZGF0YSBtaW5pbmciLCJkb2NDb3VudCI6MjIwM30seyJrZXkiOiJkYXRhYmFzZSBtYW5hZ2VtZW50IiwiZG9jQ291bnQiOjE5Nzd9LHsia2V5IjoiYXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2UiLCJkb2NDb3VudCI6MTk1NX0seyJrZXkiOiJiaWcgZGF0YSIsImRvY0NvdW50IjoxNjk2fSx7ImtleSI6ImVjb25vbXkiLCJkb2NDb3VudCI6MTAyNn0seyJrZXkiOiJjZW5zdXMiLCJkb2NDb3VudCI6OTg1fV19fX19
  recorded_at: Tue, 12 Mar 2024 19:01:50 GMT
recorded_with: VCR 6.2.0
