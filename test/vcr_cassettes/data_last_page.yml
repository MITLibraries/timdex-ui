---
http_interactions:
- request:
    method: post
    uri: https://FAKE_TIMDEX_HOST/graphql
    body:
      encoding: UTF-8
      string: '{"query":"query TimdexSearch__Query($q: String, $citation: String,
        $contributors: String, $fundingInformation: String, $identifiers: String,
        $locations: String, $subjects: String, $title: String, $sourceFacet: [String!],
        $from: String, $contentType: String) {\n  search(searchterm: $q, citation:
        $citation, contributors: $contributors, fundingInformation: $fundingInformation,
        identifiers: $identifiers, locations: $locations, subjects: $subjects, title:
        $title, sourceFacet: $sourceFacet, from: $from, contentTypeFacet: $contentType)
        {\n    hits\n    records {\n      timdexRecordId\n      title\n      contentType\n      contributors
        {\n        kind\n        value\n      }\n      publicationInformation\n      dates
        {\n        kind\n        value\n      }\n      notes {\n        kind\n        value\n      }\n      highlight
        {\n        matchedField\n        matchedPhrases\n      }\n    }\n    aggregations
        {\n      contentType {\n        key\n        docCount\n      }\n      source
        {\n        key\n        docCount\n      }\n    }\n  }\n}","variables":{"q":"data","from":"320"},"operationName":"TimdexSearch__Query"}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - MIT Libraries Client
      Content-Type:
      - application/json
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Fri, 08 Jul 2022 20:05:13 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Content-Type:
      - application/json; charset=utf-8
      Vary:
      - Accept, Origin
      Etag:
      - W/"051bb2fd58c1c15fb853b814bb06b50d"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 22684892-337f-4dd9-bfb7-0a4ec1affa73
      X-Runtime:
      - '0.142695'
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 08 Jul 2022 20:05:14 GMT
recorded_with: VCR 6.1.0
