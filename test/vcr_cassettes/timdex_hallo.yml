---
http_interactions:
- request:
    method: post
    uri: https://FAKE_TIMDEX_HOST/graphql
    body:
      encoding: UTF-8
      string: '{"query":"query TimdexSearch__Query($q: String, $citation: String,
        $contributors: String, $fundingInformation: String, $identifiers: String,
        $locations: String, $subjects: String, $title: String, $index: String, $from:
        String, $contentTypeFilter: [String!], $contributorsFilter: [String!], $formatFilter:
        [String!], $languagesFilter: [String!], $literaryFormFilter: String, $sourceFilter:
        [String!], $subjectsFilter: [String!]) {\n  search(searchterm: $q, citation:
        $citation, contributors: $contributors, fundingInformation: $fundingInformation,
        identifiers: $identifiers, locations: $locations, subjects: $subjects, title:
        $title, index: $index, from: $from, contentTypeFilter: $contentTypeFilter,
        contributorsFilter: $contributorsFilter, formatFilter: $formatFilter, languagesFilter:
        $languagesFilter, literaryFormFilter: $literaryFormFilter, sourceFilter: $sourceFilter,
        subjectsFilter: $subjectsFilter) {\n    hits\n    records {\n      timdexRecordId\n      title\n      contentType\n      contributors
        {\n        kind\n        value\n      }\n      publicationInformation\n      dates
        {\n        kind\n        value\n      }\n      notes {\n        kind\n        value\n      }\n      highlight
        {\n        matchedField\n        matchedPhrases\n      }\n      sourceLink\n    }\n    aggregations
        {\n      contentType {\n        key\n        docCount\n      }\n      contributors
        {\n        key\n        docCount\n      }\n      format {\n        key\n        docCount\n      }\n      languages
        {\n        key\n        docCount\n      }\n      literaryForm {\n        key\n        docCount\n      }\n      source
        {\n        key\n        docCount\n      }\n      subjects {\n        key\n        docCount\n      }\n    }\n  }\n}","variables":{"from":"0","q":"hallo","index":"FAKE_TIMDEX_INDEX"},"operationName":"TimdexSearch__Query"}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - MIT Libraries Client
      Content-Type:
      - application/json
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Thu, 07 Mar 2024 15:43:19 GMT
      Report-To:
      - '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1709826199&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&s=4qNe9LTtgXNH3k%2BqR4uxK88e6qlUqCm4IORHhRl1OUY%3D"}]}'
      Reporting-Endpoints:
      - heroku-nel=https://nel.heroku.com/reports?ts=1709826199&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&s=4qNe9LTtgXNH3k%2BqR4uxK88e6qlUqCm4IORHhRl1OUY%3D
      Nel:
      - '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}'
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      X-Content-Type-Options:
      - nosniff
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Content-Type:
      - application/json; charset=utf-8
      Vary:
      - Accept, Origin
      Etag:
      - W/"77cd3a25dc21826872161bc88c0eb852"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 8ab3ae2e-e766-4878-9d46-d3c58b13717e
      X-Runtime:
      - '0.149129'
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains
      Content-Length:
      - '23106'
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 07 Mar 2024 15:43:19 GMT
recorded_with: VCR 6.2.0
