---
http_interactions:
- request:
    method: post
    uri: https://FAKE_TIMDEX_HOST/graphql
    body:
      encoding: UTF-8
      string: '{"query":"query TimdexSearch__Query($q: String, $citation: String,
        $contributors: String, $fundingInformation: String, $identifiers: String,
        $locations: String, $subjects: String, $title: String, $sourceFacet: [String!],
        $index: String, $from: String, $contentType: [String!]) {\n  search(searchterm:
        $q, citation: $citation, contributors: $contributors, fundingInformation:
        $fundingInformation, identifiers: $identifiers, locations: $locations, subjects:
        $subjects, title: $title, sourceFacet: $sourceFacet, index: $index, from:
        $from, contentTypeFacet: $contentType) {\n    hits\n    records {\n      timdexRecordId\n      title\n      contentType\n      contributors
        {\n        kind\n        value\n      }\n      publicationInformation\n      dates
        {\n        kind\n        value\n      }\n      notes {\n        kind\n        value\n      }\n      highlight
        {\n        matchedField\n        matchedPhrases\n      }\n      sourceLink\n    }\n    aggregations
        {\n      contentType {\n        key\n        docCount\n      }\n      source
        {\n        key\n        docCount\n      }\n    }\n  }\n}","variables":{"from":"0","q":"10.1038/nphys1170","index":"FAKE_TIMDEX_INDEX"},"operationName":"TimdexSearch__Query"}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - MIT Libraries Client
      Content-Type:
      - application/json
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Mon, 01 Aug 2022 19:31:17 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Content-Type:
      - application/json; charset=utf-8
      Vary:
      - Accept, Origin
      Etag:
      - W/"107bda55607ad53ee9207dd956182ca9"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 49b16366-cb02-48c6-b8ac-4cc92b71c6ec
      X-Runtime:
      - '0.485340'
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 01 Aug 2022 19:31:18 GMT
recorded_with: VCR 6.1.0
