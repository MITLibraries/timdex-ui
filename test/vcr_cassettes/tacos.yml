---
http_interactions:
- request:
    method: post
    uri: https://FAKE_TIMDEX_HOST/graphql
    body:
      encoding: UTF-8
      string: '{"query":"query TimdexSearch__BaseQuery($q: String, $citation: String,
        $contributors: String, $fundingInformation: String, $identifiers: String,
        $locations: String, $subjects: String, $title: String, $index: String, $from:
        String, $booleanType: String, $accessToFilesFilter: [String!], $contentTypeFilter:
        [String!], $contributorsFilter: [String!], $formatFilter: [String!], $languagesFilter:
        [String!], $literaryFormFilter: String, $placesFilter: [String!], $sourceFilter:
        [String!], $subjectsFilter: [String!]) {\n  search(searchterm: $q, citation:
        $citation, contributors: $contributors, fundingInformation: $fundingInformation,
        identifiers: $identifiers, locations: $locations, subjects: $subjects, title:
        $title, index: $index, from: $from, booleanType: $booleanType, accessToFilesFilter:
        $accessToFilesFilter, contentTypeFilter: $contentTypeFilter, contributorsFilter:
        $contributorsFilter, formatFilter: $formatFilter, languagesFilter: $languagesFilter,
        literaryFormFilter: $literaryFormFilter, placesFilter: $placesFilter, sourceFilter:
        $sourceFilter, subjectsFilter: $subjectsFilter) {\n    hits\n    records {\n      timdexRecordId\n      title\n      contentType\n      contributors
        {\n        kind\n        value\n      }\n      publicationInformation\n      dates
        {\n        kind\n        value\n      }\n      links {\n        kind\n        restrictions\n        text\n        url\n      }\n      notes
        {\n        kind\n        value\n      }\n      highlight {\n        matchedField\n        matchedPhrases\n      }\n      provider\n      rights
        {\n        kind\n        description\n        uri\n      }\n      sourceLink\n      summary\n    }\n    aggregations
        {\n      accessToFiles {\n        key\n        docCount\n      }\n      contentType
        {\n        key\n        docCount\n      }\n      contributors {\n        key\n        docCount\n      }\n      format
        {\n        key\n        docCount\n      }\n      languages {\n        key\n        docCount\n      }\n      literaryForm
        {\n        key\n        docCount\n      }\n      places {\n        key\n        docCount\n      }\n      source
        {\n        key\n        docCount\n      }\n      subjects {\n        key\n        docCount\n      }\n    }\n  }\n}","variables":{"from":"0","q":"tacos","booleanType":"AND","index":"FAKE_TIMDEX_INDEX"},"operationName":"TimdexSearch__BaseQuery"}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - MIT Libraries Client
      Content-Type:
      - application/json
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Length:
      - '39172'
      Content-Type:
      - application/json; charset=utf-8
      Etag:
      - W/"46d0fef2dc0398207ff0f67ac58ceb8f"
      Nel:
      - '{"report_to":"heroku-nel","response_headers":["Via"],"max_age":3600,"success_fraction":0.01,"failure_fraction":0.1}'
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Report-To:
      - '{"group":"heroku-nel","endpoints":[{"url":"https://nel.heroku.com/reports?s=9lAxEBscLCBgQX%2Bp%2FLIPNnsiIz971izVEylC%2FOD3ERE%3D\u0026sid=67ff5de4-ad2b-4112-9289-cf96be89efed\u0026ts=1759503031"}],"max_age":3600}'
      Reporting-Endpoints:
      - heroku-nel="https://nel.heroku.com/reports?s=9lAxEBscLCBgQX%2Bp%2FLIPNnsiIz971izVEylC%2FOD3ERE%3D&sid=67ff5de4-ad2b-4112-9289-cf96be89efed&ts=1759503031"
      Server:
      - Heroku
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains
      Vary:
      - Accept, Origin
      Via:
      - 1.1 heroku-router
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Request-Id:
      - 356d6b91-414b-0ba9-98e4-597599888538
      X-Runtime:
      - '0.487842'
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 03 Oct 2025 14:50:31 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 03 Oct 2025 14:50:31 GMT
recorded_with: VCR 6.3.1
